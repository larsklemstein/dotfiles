# ----------------------------------------------------------------------------
# basic stuff
# ----------------------------------------------------------------------------

test -s $HOME/.dircolors && eval $(dircolors $_)

_os_info=$(uname -v)

if [[ "$_os_info" == Darwin* ]]
then
    alias exa='/usr/local/bin/exa --color=auto'

    alias grep='/usr/bin/grep --color=auto'
else
    alias exa='$HOME/.cargo/bin/exa --color=auto'

    alias grep='/bin/grep --color=auto'
fi


alias ls=exa
alias ll='exa -l'
alias la='exa -a'
alias lla='exa -la'
alias llg='exa -l --git --git-ignore'

alias egrep='grep -E'
alias fgrep='grep -F'

export TERM=xterm-256color

export PAGER=less
export LESS='-RC'


export EDITOR=nvim
export VISUAL=$EDITOR

set -o vi

alias vimdiff='nvim -d'
alias nvimdiff=vimdiff

alias kill_ssh_agents='for p in $(ps -u $LOGNAME |awk -v p=ssh-agent "\$NF == p {print \$1;}"); do kill $p ; done'

# activate Xresources
alias mx='xrdb -merge ~/.Xresources'

# nvim
alias lsswp='/bin/ls -1 $HOME/.local/share/nvim/swap/* 2>/dev/null'
alias evc="$EDITOR $HOME/.config/nvim/init.vim"

# ----------------------------------------------------------------------------
# fzf/ripgrep/fd stuff
# ----------------------------------------------------------------------------

test -f ~/.fzf.bash && . $_

alias bat='bat --color=auto --theme=gruvbox-dark'

FZF_DEFAULT_OPTS='--multi --border=horizontal -e --preview="bat --color=always '
FZF_DEFAULT_OPTS+='--theme=gruvbox-dark --line-range=:100 --style=header,numbers {}"'
export FZF_DEFAULT_OPTS

if [[ "$_os_info" != Darwin* ]] && egrep -iq '^NAME="(Debian|Ubuntu)"' /etc/os-release
then
    alias fd=fdfind
    export FZF_DEFAULT_COMMAND='fdfind . -t f'
else
    export FZF_DEFAULT_COMMAND='fd . -t f'
fi

alias fnvim='nvim $(fzf)'

unset _os_info

# ----------------------------------------------------------------------------
# go stuff
# ----------------------------------------------------------------------------

get_go_rootdir() {
    typeset org_pwd="$PWD"

    while [ "$PWD" != / -a ! -f "$PWD/main.go" ]
    do
        cd ..
    done

    if [ -f "$PWD/main.go" ]
    then
        echo "$PWD"
    else
        echo ""
    fi

    cd $org_pwd
}

alias groot=get_go_rootdir
alias cdgroot='cd $(get_go_rootdir); ls -ltr'

exec_in_go_root() {
    typeset cmds="$@"
    typeset go_root=$(get_go_rootdir)

    if [ -n "$go_root" ]
    then
        cd $go_root
        go $cmds
        cd - >/dev/null
        return 0
    else
        echo "Not possible!" >&2
        return 1
    fi
}

alias gbuild='exec_in_go_root build'
alias grun='exec_in_go_root run main.go'


# ---------------------------------------------------------------------------
# aws stuff
# ---------------------------------------------------------------------------

export AWS_CLI_PROGRAM=aws

# better decide by your own and by call
export AWS_PAGER=""

alias aws_credentials_export='perl -00ne "/\{.+\"Credentials\":\s.+\"AccessKeyId\":\s+\"([^\"]+)\".+\"SecretAccessKey\":\s+\"([^\"]+)\".+\"SessionToken\":\s+\"([^\"]+)\"/s; print qq{export AWS_ACCESS_KEY_ID=\"\$1\";export AWS_SECRET_ACCESS_KEY=\"\$2\";export AWS_SESSION_TOKEN=\"\$3\"\n}"'

aws_gt() {
    [ $# -eq 3 ] || { echo "usage: aws_gt profile mfa token_code"; return 1; }

    typeset profile="$1"
    typeset mfa="$2"
    typeset token_code="$3"

    typeset rc
    typeset json_out
    typeset export_commands

    json_out="$($AWS_CLI_PROGRAM sts get-session-token --profile "$profile" \
        --serial-number $mfa --token-code $token_code 2>&1)"

    rc=$?
    [ $rc -eq 0 ] || { echo "ups: rc=$rc"; echo "$json_out"; return 1; }

    export_commands=$(aws_credentials_export <<< "$json_out")

    if [ -z "$export_commands" ]
    then
        echo "ups: unable to convert json to export def:"
        echo "$json_out"; return
        return 1
    fi

    export_commands+=";export AWS_PROFILE=$profile"

    eval $export_commands

    echo "--> now connected to AWS account \"$profile\""
}
# EOF aws_gt()


# --- color stuff ---

test -s $HOME/.ls_colors && . $_

export GREP_COLORS='sl=49;39:cx=49;39:mt=49;38;5;178;1:fn=49;39:ln=49;39:bn=49;39:se=49;39';

export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

alias e=$EDITOR


export PAGER=less
export LESS='-RC'


test -f ~/.fzf.bash && . $_

alias bat='bat --color=auto --theme=gruvbox-dark'

# preview only if file size is <= 10MB
mybat() {
    [ $(stat -t "$1" |cut -d ' ' -f2) -le 10485760 ] && bat --color=always --theme=gruvbox-dark --style=header,numbers "$1"
}

export FZF_DEFAULT_OPTS='--multi -e --preview="bat --color=always --theme=gruvbox-dark --line-range=:100 --style=header,numbers {}"'

if [[ "$_os_info" != Darwin* ]] && test -f /etc/os-release \
    && grep -q '^NAME="Debian ' /etc/os-release
then
    alias fd=fdfind
    export FZF_DEFAULT_COMMAND='fdfind . -t f'
else
    export FZF_DEFAULT_COMMAND='fd . -t f'
fi

# each good profile should traditionally have a section called "useful aliases"...

# useful aliases

alias fnvim='nvim $(fzf)'

# git wants a command named 'vimdiff'
alias vimdiff='nvim -d'
alias nvimdiff=vimdiff

alias gs='git status -s'

alias kill_ssh_agents='for p in $(ps -u $LOGNAME |awk -v p=ssh-agent "\$NF == p {print \$1;}"); do kill $p ; done'


cfgpull() {
    typeset cfg_dir

    for cfg_dir in ~/.dotfiles ~/.config/nvim
    do
        echo "-> $cfg_dir"
        cd $cfg_dir
        git pull
        cd -
    done
}


# ---------------------------------------------------------------------------
# path nagigation stuff
# ---------------------------------------------------------------------------

show_pwd_change() {
    typeset pwd="$PWD"
    typeset oldpwd="$OLDPWD"

    [[ $pwd == $HOME/* ]] && pwd="~/${pwd#$HOME/}"
    [[ $oldpwd == $HOME/* ]] && oldpwd="~/${oldpwd#$HOME/}"
    
    echo "[$pwd <- $oldpwd]" >&2
}

alias cd1='cd ..; show_pwd_change'
alias cd2='cd ../..; show_pwd_change'
alias cd3='cd ../../..; show_pwd_change'
alias cd4='cd ../../../..; show_pwd_change'
alias cd5='cd ../../../../..; show_pwd_change'
alias cd6='cd ../../../../../..; show_pwd_change'
alias cd7='cd ../../../../../../..; show_pwd_change'
alias cd8='cd ../../../../../../../..; show_pwd_change'

cdu() {
    typeset until_what="$1"
    typeset cd_back_max="${2:-99}"
    typeset -i cd_operations=0
    typeset dir_start="$PWD"

    while [ $PWD != "/" -a $cd_operations -lt $cd_back_max ]
    do
        cd ..
        cd_operations=cd_operations+1

        if [ -e "$until_what" ]
        then
            { /bin/ls -l |sed '/ '"$until_what"'/s/$/ ***/'; } >&2
            echo -e "\n[$PWD <- $dir_start]\n" >&2
            return 0
        fi
    done

    echo "Failed..." >&2
    return 1
}



# ----------------------------------------------------------------------------
# tmux
# ----------------------------------------------------------------------------

sst(){
	# the "tmux ls" trick seems to be required on at least some systems
	# to avoid the "is not a terminal" issue.
	#
	ssh -t $@ 'tmux ls && tmux attach || tmux'
}

alias ta='tmux attach'
alias td='tmux detach'
alias tl='tmux ls'


# ----------------------------------------------------------------------------
# optionally source local/private settings
# ----------------------------------------------------------------------------

test -s ~/.common_interactive_local_sh && . $_

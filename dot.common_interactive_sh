# --- use either exa (new style ls) or standard ls ---

alias ls='/bin/ls --color=auto'
alias ll='ls -l'
alias la='ls -A'
alias lla='ls -la'

unset _exa_prog


alias grep='/bin/grep --color=auto'
alias egrep='/bin/egrep --color=auto'
alias fgrep='/bin/fgrep --color=auto'

alias vim=nvim

alias mx='xrdb -merge ~/.Xresources'

# --- go stuff ---
alias gb='echo "go build..."; go build'


# --- git stuff ---

export GIT_COMMAND=git

alias gad='$GIT_COMMAND add'
alias gco='$GIT_COMMAND commit -m '
alias gpu='$GIT_COMMAND push'
alias gst='$GIT_COMMAND status'

alias gitbranch="git branch -av| sed -n '/^\*/s/^\* *\([^ ][^ ]*\).*/\1/p'"


# --- aws stuff

export AWS_CLI_PROGRAM=aws

# better decide by your own and by call
export AWS_PAGER=""

alias aws_credentials_export='perl -00ne "/\{.+\"Credentials\":\s.+\"AccessKeyId\":\s+\"([^\"]+)\".+\"SecretAccessKey\":\s+\"([^\"]+)\".+\"SessionToken\":\s+\"([^\"]+)\"/s; print qq{export AWS_ACCESS_KEY_ID=\"\$1\";export AWS_SECRET_ACCESS_KEY=\"\$2\";export AWS_SESSION_TOKEN=\"\$3\"\n}"'

aws_gt() {
	[ $# -eq 3 ] || { echo "usage: aws_gt profile mfa token_code"; return 1; }

	typeset profile="$1"
	typeset mfa="$2"
	typeset token_code="$3"

	typeset rc
	typeset json_out
	typeset export_commands

	json_out="$($AWS_CLI_PROGRAM sts get-session-token --profile "$profile" \
		--serial-number $mfa --token-code $token_code 2>&1)"

	rc=$?
	[ $rc -eq 0 ] || { echo "ups: rc=$rc"; echo "$json_out"; return 1; }

	export_commands=$(aws_credentials_export <<< "$json_out")

	if [ -z "$export_commands" ]
	then
		echo "ups: unable to convert json to export def:"
		echo "$json_out"; return
		return 1
	fi

	export_commands+=";export AWS_PROFILE=$profile"

	eval $export_commands

	echo "--> now connected to AWS account \"$profile\""
}
# EOF aws_gt()


# --- doc stuff ---

export DOC_BROWSER=qutebrowser
# export DOC_BROWSER=firefox

alias dbg='$DOC_BROWSER www.golang.com/doc >/dev/null 2>&1 &'


# --- color stuff ---

test -s $HOME/.ls_colors && . $_

export GREP_COLORS='sl=49;39:cx=49;39:mt=49;38;5;178;1:fn=49;39:ln=49;39:bn=49;39:se=49;39';

export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quo
te=01'


# --- activate Python virtualenv in sub directory ---

alias avenv='__apy__=$(find . -maxdepth 4 -path "*/bin/activate" -type f|head -1) && [ -n "$__apy__" -a -f "$__apy__" ] && PS1="\W > " && . $__apy__ && python -V || echo "no python venv detected!"; unset __apy__'


export EDITOR=nvim
export VISUAL=$EDITOR

export PAGER=less
export LESS='-RC'

test -f ~/.fzf.bash && . $_

# what else...
set -o vi

export FZF_DEFAULT_OPTS='--multi'

alias pfzf='fzf --preview="/bin/cat {}"'

# usage: fch [DEST_DIR]
# Starts FZF to interactivly select an object (directory or file)
# and "switch" to it (cd to a dir and open editor for anyting else)
#
fch() {
	[ $# -le 1 ] || { echo '???' 2>&1; return 1; }
	typeset dest="${1:-$PWD}"
	cd $dest || { echo '???' 2>&1; return 1; }

	typeset fzf_dest=$(fzf)

	if [ -d "$fzf_dest" ]
	then
		cd $dest
	else
		echo a
		$VISUAL $fzf_dest
	fi
}

test -f $HOME/.common_interactive_local.sh && . $HOME/.common_interactive_local.sh
